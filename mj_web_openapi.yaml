openapi: 3.0.3
info:
  title: MJ_WEB API (implemented subset)
  version: 1.0.0
servers:
  - url: /api
paths:
  /home:
    get:
      summary: Homepage payload (banners, rails, featured brands, broadcast)
      description: Returns the combined data the storefront uses for the Home page. If an active broadcast exists it will be included as `broadcast` in the payload.
      responses:
        '200':
          openapi: 3.0.3
          info:
            title: MJ_WEB API (implemented subset)
            version: 1.0.0
          servers:
            - url: /api
          paths:
            /home:
              get:
                summary: Homepage payload (banners, rails, featured brands, broadcast)
                description: Returns the combined data the storefront uses for the Home page. If an active broadcast exists it will be included as `broadcast` in the payload.
                responses:
                  '200':
                    description: OK
            openapi: 3.0.3
            info:
              title: MJ_WEB API (implemented subset)
              version: 1.0.0
            servers:
              - url: /api
            paths:
              /home:
                get:
                  summary: Homepage payload (banners, rails, featured brands, broadcast)
                  description: Returns the combined data the storefront uses for the Home page. If an active broadcast exists it will be included as `broadcast` in the payload.
                  responses:
                    '200':
                      description: OK
              /test/broadcasts:
                get:
                  summary: List broadcasts (dev/test only)
                  responses:
                    '200':
                      description: OK
                post:
                  summary: Create a broadcast (dev/test only)
                  requestBody:
                    required: true
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            business_id:
                              type: integer
                            title:
                              type: string
                            body:
                              type: string
                            active:
                              type: boolean
                          required: [business_id, title, body]
                  responses:
                    '201':
                      description: Created
              /test/broadcasts/{id}:
                delete:
                  summary: Delete a broadcast by id (dev/test only)
                  parameters:
                    - in: path
                      name: id
                      required: true
                      schema:
                        type: integer
                  responses:
                    '200':
                      description: OK
              /auth/login:
                post:
                  summary: Login (returns auth cookie)
                  requestBody:
                    required: true
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            email:
                              type: string
                            password:
                              type: string
                          required: [email, password]
                  responses:
                    '200':
                      description: OK
              /auth/logout:
                post:
                  summary: Logout (clears cookie)
                  responses:
                    '200':
                      description: OK
              /account/me:
                get:
                  summary: Current session profile (uses cookie auth)
                  security: [ { cookieAuth: [] } ]
                  responses:
                    '200':
                      description: OK
            components:
              securitySchemes:
                cookieAuth:
                  type: apiKey
                  in: cookie
                  name: token
                responses:
